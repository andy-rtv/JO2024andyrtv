// <auto-generated />
using System;
using JO2024andyrtv.Areas.Identity.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace JO2024andyrtv.Migrations
{
    [DbContext(typeof(JO2024Context))]
    partial class JO2024ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("JO2024andyrtv.Areas.Identity.Data.JO2024User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("JO2024andyrtv.Models.Achat", b =>
                {
                    b.Property<int>("Id_Achat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_Achat"));

                    b.Property<Guid>("AchatGuid")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DateAchat")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Id_Utilisateur")
                        .HasColumnType("text");

                    b.Property<decimal>("MontantTotal")
                        .HasColumnType("numeric");

                    b.HasKey("Id_Achat");

                    b.HasIndex("Id_Utilisateur");

                    b.ToTable("Achats");
                });

            modelBuilder.Entity("JO2024andyrtv.Models.AchatEvenementOffre", b =>
                {
                    b.Property<int>("Id_AchatEvenementOffre")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_AchatEvenementOffre"));

                    b.Property<int>("AchatId")
                        .HasColumnType("integer");

                    b.Property<int>("EvenementId")
                        .HasColumnType("integer");

                    b.Property<int>("OffreId")
                        .HasColumnType("integer");

                    b.HasKey("Id_AchatEvenementOffre");

                    b.HasIndex("AchatId");

                    b.HasIndex("EvenementId");

                    b.HasIndex("OffreId");

                    b.ToTable("AchatEvenementOffres");
                });

            modelBuilder.Entity("JO2024andyrtv.Models.Evenement", b =>
                {
                    b.Property<int>("Id_Evenement")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_Evenement"));

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateFin")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("Genre")
                        .HasColumnType("integer");

                    b.Property<string>("ImgUrlPath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Prix")
                        .HasColumnType("numeric");

                    b.Property<string>("SportName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TypeEpreuve")
                        .HasColumnType("integer");

                    b.HasKey("Id_Evenement");

                    b.ToTable("Evenements");
                });

            modelBuilder.Entity("JO2024andyrtv.Models.Offre", b =>
                {
                    b.Property<int>("Id_Offre")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_Offre"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("NbPersonne")
                        .HasColumnType("integer");

                    b.Property<int>("Pourcentage")
                        .HasColumnType("integer");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id_Offre");

                    b.ToTable("Offres");
                });

            modelBuilder.Entity("JO2024andyrtv.Models.Ticket", b =>
                {
                    b.Property<int>("Id_Ticket")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_Ticket"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("EvenementId_Evenement")
                        .HasColumnType("integer");

                    b.Property<int>("Id_AchatEvenementOffre")
                        .HasColumnType("integer");

                    b.Property<string>("Id_Utilisateur")
                        .HasColumnType("text");

                    b.Property<string>("QRCodePath")
                        .HasColumnType("text");

                    b.Property<Guid>("TicketGuid")
                        .HasColumnType("uuid");

                    b.HasKey("Id_Ticket");

                    b.HasIndex("EvenementId_Evenement");

                    b.HasIndex("Id_AchatEvenementOffre");

                    b.HasIndex("Id_Utilisateur");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .HasColumnType("text");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("JO2024andyrtv.Models.Achat", b =>
                {
                    b.HasOne("JO2024andyrtv.Areas.Identity.Data.JO2024User", "Utilisateur")
                        .WithMany("Achats")
                        .HasForeignKey("Id_Utilisateur");

                    b.Navigation("Utilisateur");
                });

            modelBuilder.Entity("JO2024andyrtv.Models.AchatEvenementOffre", b =>
                {
                    b.HasOne("JO2024andyrtv.Models.Achat", "Achat")
                        .WithMany("AchatEvenementOffres")
                        .HasForeignKey("AchatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JO2024andyrtv.Models.Evenement", "Evenement")
                        .WithMany("AchatEvenementOffres")
                        .HasForeignKey("EvenementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JO2024andyrtv.Models.Offre", "Offre")
                        .WithMany("AchatEvenementOffres")
                        .HasForeignKey("OffreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Achat");

                    b.Navigation("Evenement");

                    b.Navigation("Offre");
                });

            modelBuilder.Entity("JO2024andyrtv.Models.Ticket", b =>
                {
                    b.HasOne("JO2024andyrtv.Models.Evenement", null)
                        .WithMany("Tickets")
                        .HasForeignKey("EvenementId_Evenement");

                    b.HasOne("JO2024andyrtv.Models.AchatEvenementOffre", "AchatEvenementOffre")
                        .WithMany("Tickets")
                        .HasForeignKey("Id_AchatEvenementOffre")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JO2024andyrtv.Areas.Identity.Data.JO2024User", "Utilisateur")
                        .WithMany("Tickets")
                        .HasForeignKey("Id_Utilisateur");

                    b.Navigation("AchatEvenementOffre");

                    b.Navigation("Utilisateur");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("JO2024andyrtv.Areas.Identity.Data.JO2024User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("JO2024andyrtv.Areas.Identity.Data.JO2024User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JO2024andyrtv.Areas.Identity.Data.JO2024User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("JO2024andyrtv.Areas.Identity.Data.JO2024User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("JO2024andyrtv.Areas.Identity.Data.JO2024User", b =>
                {
                    b.Navigation("Achats");

                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("JO2024andyrtv.Models.Achat", b =>
                {
                    b.Navigation("AchatEvenementOffres");
                });

            modelBuilder.Entity("JO2024andyrtv.Models.AchatEvenementOffre", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("JO2024andyrtv.Models.Evenement", b =>
                {
                    b.Navigation("AchatEvenementOffres");

                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("JO2024andyrtv.Models.Offre", b =>
                {
                    b.Navigation("AchatEvenementOffres");
                });
#pragma warning restore 612, 618
        }
    }
}
